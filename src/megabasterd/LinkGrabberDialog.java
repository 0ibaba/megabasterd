package megabasterd;

import java.awt.Font;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JTextArea;
import static megabasterd.MainPanel.FONT_DEFAULT;
import static megabasterd.MiscTools.extractMegaLinksFromString;
import static megabasterd.MiscTools.extractStringFromClipboardContents;
import static megabasterd.MiscTools.swingReflectionInvoke;
import static megabasterd.MiscTools.truncateText;
import static megabasterd.MiscTools.updateFont;


public final class LinkGrabberDialog extends javax.swing.JDialog implements ClipboardChangeObserver {

    private boolean _download;
    private String _download_path;
    private final ClipboardSpy _clipboardpy;

    public boolean isDownload() {
        return _download;
    }

    public String getDownload_path() {
        return _download_path;
    }

    public JTextArea getLinks_textarea() {
        return links_textarea;
    }
    
    
    
    public LinkGrabberDialog(java.awt.Frame parent, boolean modal, String download_path, ClipboardSpy clipboardspy) {
        
        super(parent, modal);
        _download = false;
        
        initComponents();
        
        updateFont(links_label, FONT_DEFAULT, Font.PLAIN);
        updateFont(dance_button, FONT_DEFAULT, Font.PLAIN);
        updateFont(down_dir_to_label, FONT_DEFAULT, Font.PLAIN);
        updateFont(change_dir_button, FONT_DEFAULT, Font.PLAIN);
        updateFont(download_dir_label, FONT_DEFAULT, Font.PLAIN);
        
        _download_path = download_path;
        
        _clipboardpy = clipboardspy;
        
        swingReflectionInvoke("setText", download_dir_label, truncateText(download_path,80));
        
        swingReflectionInvoke("setText", links_textarea,extractMegaLinksFromString(extractStringFromClipboardContents(_clipboardpy.getContents())));
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        links_scrollpane = new javax.swing.JScrollPane();
        links_textarea = new javax.swing.JTextArea();
        dance_button = new javax.swing.JButton();
        links_label = new javax.swing.JLabel();
        change_dir_button = new javax.swing.JButton();
        down_dir_to_label = new javax.swing.JLabel();
        download_dir_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LinkGrabber");
        setModal(true);

        links_textarea.setColumns(20);
        links_textarea.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        links_textarea.setRows(5);
        links_textarea.setDoubleBuffered(true);
        links_scrollpane.setViewportView(links_textarea);
        links_textarea.addMouseListener(new ContextMenuMouseListener());

        dance_button.setBackground(new java.awt.Color(102, 204, 255));
        dance_button.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        dance_button.setForeground(new java.awt.Color(255, 255, 255));
        dance_button.setText("Let's dance, baby");
        dance_button.setDoubleBuffered(true);
        dance_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dance_buttonActionPerformed(evt);
            }
        });

        links_label.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        links_label.setText("Put your MEGA/MegaCrypter link/s here (one per line):");
        links_label.setDoubleBuffered(true);

        change_dir_button.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        change_dir_button.setText("Change it");
        change_dir_button.setDoubleBuffered(true);
        change_dir_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                change_dir_buttonActionPerformed(evt);
            }
        });

        down_dir_to_label.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        down_dir_to_label.setText("Download to: ");
        down_dir_to_label.setDoubleBuffered(true);

        download_dir_label.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        download_dir_label.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(links_scrollpane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(links_label)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(change_dir_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(down_dir_to_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(download_dir_label, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dance_button, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(links_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(links_scrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dance_button, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(change_dir_button)
                            .addComponent(down_dir_to_label)
                            .addComponent(download_dir_label))
                        .addGap(5, 5, 5)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dance_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dance_buttonActionPerformed
        
        _download=true;
        dispose();
    }//GEN-LAST:event_dance_buttonActionPerformed

    private void change_dir_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_change_dir_buttonActionPerformed
        

        javax.swing.JFileChooser filechooser = new javax.swing.JFileChooser();

        filechooser.setCurrentDirectory(new java.io.File(_download_path));
        filechooser.setDialogTitle("Download directory");
        filechooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        filechooser.setAcceptAllFileFilterUsed(false);

        if( filechooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION ) {

            File file = filechooser.getSelectedFile();

            _download_path = file.getAbsolutePath();

            swingReflectionInvoke("setText", download_dir_label, truncateText(_download_path,80));
        }
    }//GEN-LAST:event_change_dir_buttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton change_dir_button;
    private javax.swing.JButton dance_button;
    private javax.swing.JLabel down_dir_to_label;
    private javax.swing.JLabel download_dir_label;
    private javax.swing.JLabel links_label;
    private javax.swing.JScrollPane links_scrollpane;
    private javax.swing.JTextArea links_textarea;
    // End of variables declaration//GEN-END:variables

    @Override
    public void notifyClipboardChange() {
        
        swingReflectionInvoke("setText", links_textarea,extractMegaLinksFromString(extractStringFromClipboardContents(_clipboardpy.getContents())));
    }
}
